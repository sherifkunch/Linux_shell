#include <unistd.h>
#include <stdlib.h>
#include <err.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>
#include <stdint.h> 

struct triple_t {
	uint16_t pos;
	uint8_t len;
	uint8_t buf;
};

int main (int argc, const char* argv[]){
	
	if(argc != 5){
		errx(1,"Invalid number of parameters!");
	}

	struct stat st;
	//check if file exists at all
	if(stat(argv[1],&st) < 0){
		err(4,"Stat went wrong!");
	}
	if(st.st_size % sizeof(uint8_t) != 0){
		errx(5,"Invalid file size of %s",argv[2]);
	}

	if(st.st_size > 0xFFFF){
		warnx("Size of %s greater than 0xFFFF", argv[1]);
	}
	if(stat(argv[2],&st) < 0){
		err(6,"Stat went wrong!");
	}
	if(st.st_size % sizeof(struct triple_t) != 0){
		errx(5,"Invalid size of fd1idx");
	}
	int fd1dat;
	if((fd1dat = open(argv[1],O_RDONLY)) == -1){
		err(2,"Opening fd1dat failed");
	}
	int fd1idx;
	if((fd1idx = open(argv[2],O_RDONLY)) == -1){
		const int olderrno = errno;
		close(fd1idx);
		errno=olderrno;
		err(3,"Opening fd1idx failed");
	}	

	int fd2dat;
	if((fd2dat = open(argv[3],O_RDWR | O_CREAT| O_TRUNC ,S_IRUSR | S_IWUSR | S_IRWXG )) == -1){
		const int olderrno = errno;
		close(fd1dat);
		close(fd1idx);
		errno=olderrno;
		err(2,"Opening fd1dat failed");
	}

	int fd2idx;
	if((fd2idx = open(argv[4], O_RDWR | O_CREAT| O_TRUNC ,S_IRUSR | S_IWUSR | S_IRWXG )) == -1){
		const int olderrno = errno;
		close(fd1dat);
		close(fd1idx);
		close(fd2dat);
		errno=olderrno;
		err(2,"Opening fd1dat failed");
	}

	struct triple_t el;
	struct triple_t y = {0,0,0};

	while(read(fd1idx,&el,sizeof(el)) == sizeof(el)){
		uint8_t a; 
		lseek(fd1dat,el.len,SEEK_SET);
		read(fd1dat,&a,sizeof(a));
		if(a >= 'A' && a <= 'Z' ){
			y.len = el.len 
			write(fd2dat,&a,sizeof(a));
			for(int i =1 ;i < el.len;i++){
				read(fd1dat,&a,sizeof(a));
				write(fd2dat,&a,sizeof(a));
			}
			write(fd2idx,&y,sizeof(y));
			y.pos += y.len;
		}
	}
	close(fd1dat);
	close(fd1idx);
	close(fd2dat);
	close(fd2idx);
	exit(0);
}


Да се напише shell скрипт, който възстановява изтрити файлове, които имат запазено копие в BACKUP_DIR (от предната задача).
При възстановяването файловете да се декомпресират, а директориите да се декомпресират и разархивират.

а) Да се дефинира параметър -l, който изрежда всички файлове, които могат да бъдат възстановени и датата на тяхното изтриване.

б) Скриптът да приема 2 параметъра. Първият е името на файла, който да се възстанови, а вторията е директорията, 
в която файлът да бъде възстановен. Ако вторият аргумент липсва, файлът да се възстановява в сегашната директория, 
където скриптът се изпълнява.

в) Когато има N > 1 запазени файла със същото име, да се изпише списък с N реда на потребителя и да
се изиска той да въведе цяло число от 1 до N, за да избере кой файл да възстанови.

Примери:
# BACKUP_DIR трябва да е дефинирана преди използването на скрипта
$ echo $BACKUP_DIR
~/.backup

$ ./restore.sh -l
f1  (2018/05/07 18:04:36)
f1  (2018/05/07 18:06:01)
f2  (2018/05/07 18:04:36)
full-dir    (2018/05/07 18:04:50)
empty-dir   (2018/05/07 18:04:36)

$ ls restored-dir/
# възстановяване на файл в подадена директория
$ ./restore.sh f2 target-dir/
$ ls restored-dir/
f2

# възстановяване на дублиран файл в сегашната директория
$ ./restore.sh f1
(1) f1  (2018/05/07 18:04:36)
(2) f1  (2018/05/07 18:06:01)
choose file (1, 2):
# потребителят въвежда 2

$ ls
f1

$ ./restore.sh -l
f1  (2018/05/07 18:04:36)
full-dir    (2018/05/07 18:04:50)
empty-dir   (2018/05/07 18:04:36)

# възстановяване на директория в сегашната директория
$ ./restore.sh full-dir
$ ls
f1  full-dir/

#!/bin/bash

if [ $# -eq 1 ];then 
	first_arg="${1}"
	destination_dir='.'
		
elif [ $# -eq 2 ]; then
	first_arg="${1}"
	destination_dir="${2}"
else
	echo"Invalid number of parameters!"
	exit 1
fi

FLAG=0

function files-to-restore-dates {
paste <(ls "${BACKUP_DIR}" | egrep '*.t?gz$' | cut -d'_' -f1) <(ls "${BACKUP_DIR}" | egrep '*.t?gz$' | cut -d'_' -f2 | cut -d '.' -f1)
}

if [ ${first_arg} = -l ];then
FLAG=1
shift 1
fi

if [ "${FLAG}" -eq 1 ];then 
files-to-restore-dates
fi

if [[ "${first_arg}" =~ .*\.gz$ ]]; then
extension="gz"
elif [[ "${first_arg}" =~ .*.tgz$ ]]; then
extension="tgz"
fi

case $extension in 
	gz) gzip -dc "${first_arg}" > "${destination_dir}"/$(basename "${first_arg}"| sed 's/\.gz$//');echo "DONE"
	;;
	tgz) tar zxf "${first_arg}" -C "${destination_dir}"
	;;
esac
